/*
 * DotAAS Part 2 | HTTP/REST | Submodel Registry Service Specification
 *
 * The Full Profile of the Submodel Registry Service Specification as part of the [Specification of the Asset Administration Shell: Part 2](http://industrialdigitaltwin.org/en/content-hub).   Publisher: Industrial Digital Twin Association (IDTA) April 2023
 *
 * OpenAPI spec version: V3.0.3_SSP-001
 * Contact: info@idtwin.org
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using System.ComponentModel.DataAnnotations;

using Microsoft.AspNetCore.Authorization;
using AasRegistryDiscovery.WebApi.Attributes;
using AasRegistryDiscovery.WebApi.Models;
using Microsoft.Extensions.Logging;
using AasRegistryDiscovery.WebApi.Interfaces;
using Microsoft.IdentityModel.Tokens;

namespace AasRegistryDiscovery.WebApi.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class SubmodelRegistryAPIApiController : ControllerBase
    {
        private readonly ILogger<SubmodelRegistryAPIApiController> _logger;
        private readonly IPersistenceService _persistenceService;
        private readonly IBase64UrlDecoderService _decoderService;

        public SubmodelRegistryAPIApiController(
            ILogger<SubmodelRegistryAPIApiController> logger,
            IPersistenceService persistenceService,
            IBase64UrlDecoderService decoderService)
        {
            _logger = logger;
            _persistenceService = persistenceService;
            _decoderService = decoderService;
        }
        /// <summary>
        /// Deletes a Submodel Descriptor, i.e. de-registers a submodel
        /// </summary>
        /// <param name="submodelIdentifier">The Submodel’s unique id (UTF8-BASE64-URL-encoded)</param>
        /// <response code="204">Submodel Descriptor deleted successfully</response>
        /// <response code="400">Bad Request, e.g. the request parameters of the format of the request body is wrong.</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="500">Internal Server Error</response>
        [HttpDelete]
        [Route("/api/v3.0/submodel-descriptors/{submodelIdentifier}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteSubmodelDescriptorById")]
        [SwaggerResponse(statusCode: 400, type: typeof(Result), description: "Bad Request, e.g. the request parameters of the format of the request body is wrong.")]
        [SwaggerResponse(statusCode: 403, type: typeof(Result), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Result), description: "Not Found")]
        [SwaggerResponse(statusCode: 500, type: typeof(Result), description: "Internal Server Error")]
        public virtual IActionResult DeleteSubmodelDescriptorById([FromRoute][Required]string submodelIdentifier)
        {
            var decodedSmIdentifier = _decoderService.Decode("submodelIdentifier", submodelIdentifier);
            _logger.LogInformation($"Received request to delete SubmodelDescriptor by id: {submodelIdentifier}");
            _persistenceService.DeleteSubmodeldescriptorById(decodedSmIdentifier);
            return NoContent();
        }

        /// <summary>
        /// Returns all Submodel Descriptors
        /// </summary>
        /// <param name="limit">The maximum number of elements in the response array</param>
        /// <param name="cursor">A server-generated identifier retrieved from pagingMetadata that specifies from which position the result listing should continue</param>
        /// <response code="200">Requested Submodel Descriptors</response>
        /// <response code="400">Bad Request, e.g. the request parameters of the format of the request body is wrong.</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="500">Internal Server Error</response>
        /// <response code="0">Default error handling for unmentioned status codes</response>
        [HttpGet]
        [Route("/api/v3.0/submodel-descriptors")]
        [ValidateModelState]
        [SwaggerOperation("GetAllSubmodelDescriptors")]
        [SwaggerResponse(statusCode: 200, type: typeof(GetSubmodelDescriptorsResult), description: "Requested Submodel Descriptors")]
        [SwaggerResponse(statusCode: 400, type: typeof(Result), description: "Bad Request, e.g. the request parameters of the format of the request body is wrong.")]
        [SwaggerResponse(statusCode: 403, type: typeof(Result), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Result), description: "Not Found")]
        [SwaggerResponse(statusCode: 500, type: typeof(Result), description: "Internal Server Error")]
        [SwaggerResponse(statusCode: 0, type: typeof(Result), description: "Default error handling for unmentioned status codes")]
        public virtual IActionResult GetAllSubmodelDescriptors([FromQuery]int? limit, [FromQuery]string? cursor)
        {
            _logger.LogDebug("Received request to get all Submodel Descriptors");

            var output = _persistenceService.GetAllSubmodelDescriptors(limit, cursor);
            return new ObjectResult(output);
        }

        /// <summary>
        /// Returns a specific Submodel Descriptor
        /// </summary>
        /// <param name="submodelIdentifier">The Submodel’s unique id (UTF8-BASE64-URL-encoded)</param>
        /// <response code="200">Requested Submodel Descriptor</response>
        /// <response code="400">Bad Request, e.g. the request parameters of the format of the request body is wrong.</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="500">Internal Server Error</response>
        /// <response code="0">Default error handling for unmentioned status codes</response>
        [HttpGet]
        [Route("/api/v3.0/submodel-descriptors/{submodelIdentifier}", Name = "GetSubmodelDescriptorById")]
        [ValidateModelState]
        [SwaggerOperation("GetSubmodelDescriptorById")]
        [SwaggerResponse(statusCode: 200, type: typeof(SubmodelDescriptor), description: "Requested Submodel Descriptor")]
        [SwaggerResponse(statusCode: 400, type: typeof(Result), description: "Bad Request, e.g. the request parameters of the format of the request body is wrong.")]
        [SwaggerResponse(statusCode: 403, type: typeof(Result), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Result), description: "Not Found")]
        [SwaggerResponse(statusCode: 500, type: typeof(Result), description: "Internal Server Error")]
        [SwaggerResponse(statusCode: 0, type: typeof(Result), description: "Default error handling for unmentioned status codes")]
        public virtual IActionResult GetSubmodelDescriptorById([FromRoute][Required]string submodelIdentifier)
        {
            var decodedSmIdentifier = _decoderService.Decode("submodelIdentifier", submodelIdentifier);
            _logger.LogInformation($"Received request to get SubmodelDescriptor by id: {submodelIdentifier}");
            var output = _persistenceService.GetSubmodelDescriptorById(decodedSmIdentifier);
            return new ObjectResult(output);
        }

        /// <summary>
        /// Creates a new Submodel Descriptor, i.e. registers a submodel
        /// </summary>
        /// <param name="body">Submodel Descriptor object</param>
        /// <response code="201">Submodel Descriptor created successfully</response>
        /// <response code="400">Bad Request, e.g. the request parameters of the format of the request body is wrong.</response>
        /// <response code="403">Forbidden</response>
        /// <response code="409">Conflict, a resource which shall be created exists already. Might be thrown if a Submodel or SubmodelElement with the same ShortId is contained in a POST request.</response>
        /// <response code="0">Default error handling for unmentioned status codes</response>
        [HttpPost]
        [Route("/api/v3.0/submodel-descriptors")]
        [ValidateModelState]
        [SwaggerOperation("PostSubmodelDescriptor")]
        [SwaggerResponse(statusCode: 201, type: typeof(SubmodelDescriptor), description: "Submodel Descriptor created successfully")]
        [SwaggerResponse(statusCode: 400, type: typeof(Result), description: "Bad Request, e.g. the request parameters of the format of the request body is wrong.")]
        [SwaggerResponse(statusCode: 403, type: typeof(Result), description: "Forbidden")]
        [SwaggerResponse(statusCode: 409, type: typeof(Result), description: "Conflict, a resource which shall be created exists already. Might be thrown if a Submodel or SubmodelElement with the same ShortId is contained in a POST request.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Result), description: "Default error handling for unmentioned status codes")]
        public virtual IActionResult PostSubmodelDescriptor([FromBody]SubmodelDescriptor body)
        {
            _logger.LogInformation("Received request to create new SubmodelDescriptor in Submodel Registry");
            var output = _persistenceService.CreateSubmodelDescriptor(body);
            var routeValues = new { submodelIdentifier = Base64UrlEncoder.Encode(body.Id) };
            return CreatedAtRoute("GetSubmodelDescriptorById", routeValues, body);
        }

        /// <summary>
        /// Updates an existing Submodel Descriptor
        /// </summary>
        /// <param name="body">Submodel Descriptor object</param>
        /// <param name="submodelIdentifier">The Submodel’s unique id (UTF8-BASE64-URL-encoded)</param>
        /// <response code="204">Submodel Descriptor updated successfully</response>
        /// <response code="400">Bad Request, e.g. the request parameters of the format of the request body is wrong.</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="500">Internal Server Error</response>
        /// <response code="0">Default error handling for unmentioned status codes</response>
        [HttpPut]
        [Route("/api/v3.0/submodel-descriptors/{submodelIdentifier}")]
        [ValidateModelState]
        [SwaggerOperation("PutSubmodelDescriptorById")]
        [SwaggerResponse(statusCode: 400, type: typeof(Result), description: "Bad Request, e.g. the request parameters of the format of the request body is wrong.")]
        [SwaggerResponse(statusCode: 403, type: typeof(Result), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(Result), description: "Not Found")]
        [SwaggerResponse(statusCode: 500, type: typeof(Result), description: "Internal Server Error")]
        [SwaggerResponse(statusCode: 0, type: typeof(Result), description: "Default error handling for unmentioned status codes")]
        public virtual IActionResult PutSubmodelDescriptorById([FromBody]SubmodelDescriptor body, [FromRoute][Required]string submodelIdentifier)
        {
            var decodedSmIdentifier = _decoderService.Decode("submodelIdentifier", submodelIdentifier);
            _logger.LogInformation($"Received request to update SubmodelDescriptor with id {decodedSmIdentifier}");

            _persistenceService.UpdateSubmodelDescriptorById(decodedSmIdentifier, body);

            return NoContent();
        }
    }
}
